var path = require('path')
  , CACHE = {}
  , roots 
  ;

setConfigRoot(process.env.OSG_CONFIG_ROOT || path.join(process.cwd(), "../config/dist"));

module.exports = exports = 
 { get:
    function get(name, force){
        return !force && CACHE[name]
            ? CACHE[name]
            : CACHE[name] = exports.loadSync(name);
    }
 , loadSync:  loadSync
 }

Object.defineProperty( exports , 'roots'
, { get: function() { return roots.concat() }
  , set: setConfigRoot
  , enumerable: true
  , configurable: false
  }
);

function setConfigRoot(dir) {
    if (Array.isArray(dir)) {
        roots = [].concat(dir);
        return;
    }
    if ('string' == typeof dir) {
        roots = dir.split(",");
        return;
    }
    throw new Error('illegal value to osg-config: ' + dir );
}

function loadSync(name) {
    var i;
    for( i = 0 ; i < roots.length; i++ )
        try {
            return require( path.join( roots[i] , name ) );
        } catch (ex) {}       
    throw new Error("cannot find config module: [" + name + "], in any of config roots: [" + roots + "]" );
}
