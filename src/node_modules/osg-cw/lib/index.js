var log = require('osg-logger').of('cw:index')
    , timer = require('./timer')
    , model = require('./model')
    , dispatcher = require('./dispatcher')
    , middleware = require('./middleware')
    , concurrent = require('./concurrent')
    , sequence = require('./sequence')
    , stats = require('./stats')
    , API
    ;

module.exports = function (config) {
    if (API) return API; // return first instance

    if (typeof config !== 'object' || !config.app || !config.cloudWatch) throw new Error('cloudwatch config error');
    API = {};

    if (config.cloudWatch.enable === false) {
        log.info("cloudWatch module is disabled from config (config.cloudWatch.enable)");
    } else {
        config.cloudWatch.enable = true;
    }
    var dal = model();
    config.app.env = config.app.env || config.app.environment || 'notset';
    config.cloudWatch.namespace = (config.app ? config.app.name : (config.namespace || 'notset')).toUpperCase();
    config.cloudWatch.interval = config.cloudWatch.interval || 60000;
    var disp = dispatcher(config);
    var stoper = timer(function (err) {
        disp.fetch();
    });
    config.cloudWatch.model = dal;
    config.cloudWatch.timer = stoper;
    API.middleware = middleware(config);
    API.concurrent = concurrent(config);
    API.sequence = sequence(config);
    API.stats = stats(config);

    if(config.cloudWatch.enable){
        stoper.start(config.cloudWatch.interval);
    }
    log.info("cloudWatch module initiated");
    return API;
}


//log.debug('module loaded')